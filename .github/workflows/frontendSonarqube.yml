on:
  workflow_call:
  
jobs:

  analyse-frontend-code:

    defaults:
      run:
        working-directory: ./front

    runs-on: ubuntu-latest

    steps:

      # - name: Clean the workspace
      #   uses: docker://alpine
      #   with:
      #     args: /bin/sh -c "find \"${GITHUB_WORKSPACE}\" -mindepth 1 ! -name . -prune -exec rm -rf {} +"

     
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      
      - name: Get Jasmine test coverage report
        uses: actions/download-artifact@v4
        with:
          name: Jasmine Report
          path: ./front/coverage/bobapp

      # - name: Install packages 
      #   working-directory: ./front
      #   run: npm ci
  
      # - name: Test frontend and coverage
      #   working-directory: ./front
      #   run: npm run test:ci
        
      # - name: Get Jasmine test coverage report
      #   uses: actions/upload-artifact@v4
      #   if: success() || failure()
      #   with:
      #     name: Jasmine Report
      #     path: ./front/coverage/bobapp

      - name: Analyze frontend
        uses: SonarSource/sonarcloud-github-action@master
        with:
          args: >
            -Dsonar.organization=solau92
            -Dsonar.projectKey=solau92_DevFS-Projet-10-Gerez-un-projet-collaboratif-en-integrant-une-demarche-CI-CD_front
            -Dsonar.sources=src
            -Dsonar.tests=src
            -Dsonar.exclusions=**/*.spec.ts,**/*test.ts,**/*.js
            -Dsonar.test.inclusions=**/*.spec.ts,**/*test.ts
            -Dsonar.javascript.lcov.reportPaths=coverage/bobapp/lcov.info
          projectBaseDir: ./front
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN_FRONT }}

      - name: Get SonarQube quality report
        uses: actions/upload-artifact@v4
        with:
          name: SonarQube frontend Report
          path: ./front/.scannerwork/report-task.txt